<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAD///8A////AAAAAAAAAAAAAAAAAQAAAAcAAAARAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAEAAA
        AAYAAAABAAAAAAAAAAEAAAAHAAAAEQAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABAAAAAGAAAAAQAA
        AAAAAAAA////AP///wD///8AAAAAAAAAAAEAAAAIAAAAHwAAADkAAABDAAAAQwAAAEMAAABDAAAAQwAA
        AEIAAAA3AAAAHgAAAAgAAAABAAAACAAAAB8AAAA5AAAAQwAAAEMAAABDAAAAQwAAAEMAAABCAAAANwAA
        AB4AAAAIAAAAAQAAAAD///8A////AP///wAAAAAEAAAADgAAACMdHRxXTkxL/ExKSf9MSkn/TUtK/0VD
        Q/86ODf/PTs6/0A+Pe8ZGBhXAAAAJAAAABgAAAAkGhkZV0RCQfw9Ozr/Ojg4/0JAP/9NS0r/TEpJ/0xK
        Sf9LSUjvHx4dVwAAAB8AAAAHAAAAAP///wD///8A////AAAAAA0AAAAsGBgZWVlYVv+XlZT/t7Wz/7e1
        s/+4trT/urm2/5yamP+Vk5D/fHp6/0pIR/8SEhJZAAAARBEREllLSUf/fXt5/5WTkf+XlZP/ube1/7q4
        tf+4trT/t7Wz/5iWlf9bWVf/IyIhUQAAABEAAAAA////AP///wD///8AAAAAFY97ZMJlX1z/oqCf/7u5
        uP97eXj/Xl1e/1NSUv9YVlb/ZGJg/2VjYf+dm5n/iYeG/1VST/+nj3L/XVdT/4mHh/+dm5n/Z2Vi/2Ff
        Xf9cWln/W1lY/2dlZP9/fXv/vLq5/6Sin/9cWln8AAAAFgAAAAD///8A////AP///wAAAAAWnYhw/1xc
        Xf/S0M//g4GB/4aAdv/EuKP/2suy/3BsZ/9XVVX/VlRT/1VTUv9WVFP/VlRU/1VUVP9WVFT/VlRT/1VT
        Uv9WVFP/WVdW/1pYV98AAAAUCwsLCVlXVquHhYT/1NLP/2FfXv8AAAAWAAAAAP///wD///8A////AAAA
        ABaeiG//Y2Nk/+De3f99e3r/tqqY////+P/Tw63/YWBf//Pz9P/w8PH/7+/v/+/v8P/v7/D/7+/w/+/v
        8P/v7/D/7+/v//Dw8f/19fb/bGpo/wAAACUAAAAeMC8uU4OBf//i4N3/Z2Vk/wAAABYAAAAA////AP//
        /wD///8AAAAAFp6Ib/9qamv/6ejn/5STk/+koZv/yr6m////+v+FgXz/dnRy/3Nwbv9xb2z/cW9t/3Jw
        bv9xb23/cnBu/3Fvbf9xb2z/c3Fu/3d1c/9zcXDiAAAASAAAAEZeXFu7mZeW/+vp6P9vbGz/AAAAEAAA
        AAD///8A////AP///wAAAAAWnYdv/359fP/Ozc3/5OTj/5ORkf9ramr/bWtr/3Bubv9xb27/n52c/+jn
        5v/JyMf/hH95////+/98eHT/0NDQ/+fn5v+XlZT/cnBv/3Vycf91c3L/c3Fw/6Cenf/m5eT/ycjH/3d1
        c+oAAAAGAAAAAP///wD///8A////AAAAABachm7/zsS1/3x7e//Ly8v/8/Ly//Tz8//09PT/9fX0//X0
        9P/08/P/zs3M/4eEf//Ov6H/3s2q/8a6ov99fHv/zc3N//X09P/29fT/9/b1//f29f/29fT/9fTz/8/O
        zf+Fg4L/aWdmJwAAAAEAAAAA////AP///wD///8AAAAAFpmEbf/g1sb/w7em/42Khf98e3z/fHx8/318
        fP98fHz/fXx8/318fP9nf3T/zr6k/wAX7/8AFe3/28qs/8/Ftf+Ef3v/goGA/4OBf/+DgX//g4F//4OB
        f/+Egn//hoSC+3JwbyUAAAABAAAAAAAAAAD///8A////AP///wAAAAAWmYRt/+DXyP/SxbD/1Mey/9XI
        tP/WybT/1sm0/9bJtP/WybT/1sm0/9fItP/YyrL/3c2v/93Mrf/Vx67/4dfH/5uEa/8AAAAWAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wD///8A////AAAAABaahW7/4dnL/9HF
        sf/CqYj/w6qL/8Ori//Dq4v/w6uL/8Ori//Dq4v/w6uL/8Sriv/Eq4r/xKqH/9LFsP/i2cv/m4Vu/wAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8A////AP///wAAAAAWpZB4//v49f/ayrb/+/r4//v6
        +P/7+vj/+/r4//v6+P/7+vj/+/r4//v6+P/7+vj/+/r4//v6+P/ayrb/+/j1/6WQeP8AAAAWAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wD///8A////AAAAABWlkHr//fr3/9rK
        tv/aybX/2sm1/9rJtf/aybX/2sm1/9rJtf/aybX/2sm1/9rJtf/aybX/2sm1/9rKtv/9+vf/pZB6/wAA
        ABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AP///wD///8AAAAADaiT
        fP////3//fr2//v49f/7+PT/+/j0//v49P/7+PT/+/j0//v49P/7+PT/+/j0//v49P/7+PX//fr2////
        /f+ok3z/AAAADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8A////AP//
        /wAAAAAEpZF9s6eRe//Ju6b/zcCr/8y/qf/Mv6n/zL+p/8y/qf/Mv6n/zL+p/8y/qf/Mv6n/zL+p/83A
        q//Ju6b/p5F7/6WRfbMAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        /wD///8A////AAAAAAAAAAADppJ+rr+tmP/g08D/39G//9/Rvv/f0b7/39G+/9/Rvv/f0b7/39G+/9/R
        vv/f0b//4NPA/7+tmP+mkn6uAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////AP///wD///8AAAAAAAAAAAAAAAAEqZWAsK2Yg/+sl4L/rJeC/6yXgv+sl4L/rJeC/6yX
        gv+sl4L/rJeC/6yXgv+tmIP/qZWAsAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///8A8ACAB+AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAfAAAf/wAAH/8AAB//AAAf/wAAH/8AAB//AAAf/wAAH/8AAB//AAAf/wAAH/8AAB//AAAf/wAAH/8AA
        B//AAAf/wAAH/8AAB//AAAf/4AAP//AAH/8=
</value>
  </data>
</root>