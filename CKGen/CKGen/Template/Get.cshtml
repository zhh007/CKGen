@using RazorEngine.Templating
@using CKGen.DBSchema;
@using CKGen;
@inherits TemplateBase<ITableInfo>

/// <summary>
/// 根据主键获取记录
/// </summary>
public static @(Model.PascalName) Get(@(Util.GetPKDefine(Model)))
{
    string sql = @@"@(Util.BuildGetByPKSql(Model))";

    @(Model.PascalName) info = null;
    using (SqlConnection conn = new SqlConnection('conn_name'))
    {
        SqlCommand cmd = new SqlCommand(sql, conn);
@foreach(var column in Model.Columns)
{
    if (!column.IsPrimaryKey)
    {
        continue;
    }
<text>
        SqlParameter para_@(column.PascalName) = @(Util.GetSqlParameter(column));
        para_@(column.PascalName).Value = @(column.CamelName);
        cmd.Parameters.Add(para_@(column.PascalName));</text>
}

        try
        {
            conn.Open();
            using (SqlDataReader sdr = cmd.ExecuteReader())
            {
@foreach(var column in Model.Columns)
{
<text>                int @(column.CamelName)Ordinal = sdr.GetOrdinal("@(column.RawName)");</text>
}

                if (sdr.Read())
                {
                    info = new @(Model.PascalName);
@foreach(var column in Model.Columns)
{
<text>
                    if(sdr.IsDBNull(@(column.CamelName)Ordinal))
                    {
                        info.@(column.PascalName) = @(Util.BuildGetSqlReaderNullStr(column));
                    }
                    else
                    {
                        @(Util.BuildSetFieldValue(column))
                    }</text>
}
                }
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }
        finally
        {
            if (conn.State != ConnectionState.Closed)
                conn.Close();
            if (conn != null)
                conn.Dispose();
        }
    }

    return info;
}
