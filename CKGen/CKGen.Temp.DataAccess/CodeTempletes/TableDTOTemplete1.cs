// ------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本: 14.0.0.0
//  
//     对此文件的更改可能导致不正确的行为，如果
//     重新生成代码，则所做更改将丢失。
// </auto-generated>
// ------------------------------------------------------------------------------
namespace CKGen.Temp.DataAccess.CodeTempletes
{
    using CKGen.DBSchema;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\TableDTOTemplete.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public partial class TableDTOTemplete : TableDTOTempleteBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("using System;\r\nusing System.Text;\r\nusing System.Collections.Generic;\r\nusing Syste" +
                    "m.Data;\r\nusing System.Data.SqlClient;\r\nusing zlab.ORM.Schema;\r\nusing zlab.Utilit" +
                    "y;\r\nusing ");
            
            #line 12 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\TableDTOTemplete.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(NameSpace));
            
            #line default
            #line hidden
            this.Write(".Model;\r\nusing ");
            
            #line 13 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\TableDTOTemplete.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(NameSpace));
            
            #line default
            #line hidden
            this.Write(".Schema;\r\nusing ");
            
            #line 14 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\TableDTOTemplete.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(NameSpace));
            
            #line default
            #line hidden
            this.Write(".Entities;\r\n\r\nnamespace ");
            
            #line 16 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\TableDTOTemplete.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(NameSpace));
            
            #line default
            #line hidden
            this.Write(".DAO\r\n{\r\n\tpublic sealed class ");
            
            #line 18 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\TableDTOTemplete.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("DAO\r\n\t{\r\n\t\t");
            this.Write("/// <summary>\r\n        /// 根据主键获取记录\r\n        /// </summary>\r\n\t\tpublic static ");
            
            #line 4 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info Get(");
            
            #line 4 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.GetPKDefine(DBTable)));
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n\t\t\tstring sql = @\"");
            
            #line 6 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildGetByPKSql(DBTable)));
            
            #line default
            #line hidden
            this.Write("\";\r\n\r\n            ");
            
            #line 8 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info info = null;\r\n            using (SqlConnection conn = new SqlConnection(");
            
            #line 9 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Var.DBConnectionName));
            
            #line default
            #line hidden
            this.Write("Link.Connection))\r\n            {\r\n\t\t\t\tSqlCommand cmd = new SqlCommand(sql, conn);" +
                    "\r\n");
            
            #line 12 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"

foreach(var column in DBTable.Columns)
{
if (!column.IsPrimaryKey)
	continue;

            
            #line default
            #line hidden
            this.Write("\t\t\t\tSqlParameter para_");
            
            #line 18 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 18 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Schema.");
            
            #line 18 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(".GetSqlParameter();\r\n                para_");
            
            #line 19 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(".Value = ");
            
            #line 19 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write(";\r\n                cmd.Parameters.Add(para_");
            
            #line 20 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n");
            
            #line 22 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"

}

            
            #line default
            #line hidden
            this.Write("\t\t\t\ttry\r\n\t\t\t\t{\r\n                \tconn.Open();\r\n                \tusing (SqlDataRea" +
                    "der sdr = cmd.ExecuteReader())\r\n                \t{\r\n");
            
            #line 30 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"

foreach(var column in DBTable.Columns)
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\tint ");
            
            #line 34 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write("Ordinal = sdr.GetOrdinal(\"");
            
            #line 34 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.RawName));
            
            #line default
            #line hidden
            this.Write("\");\r\n");
            
            #line 35 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"

}

            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\tif (sdr.Read())\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tinfo = new ");
            
            #line 41 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info();\r\n");
            
            #line 42 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"

foreach(var column in DBTable.Columns)
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\tif(sdr.IsDBNull(");
            
            #line 46 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write("Ordinal))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tinfo._set");
            
            #line 48 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 48 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildGetSqlReaderNullStr(column)));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t");
            
            #line 52 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildSetFieldValue(column)));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n");
            
            #line 55 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"

}

            
            #line default
            #line hidden
            this.Write(@"                  
						}
					}
				}
				catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State != ConnectionState.Closed)
                        conn.Close();
					if (conn != null)
                        conn.Dispose();
                }
            }

            return info;
        }
		
		/// <summary>
        /// 根据主键获取记录
        /// </summary>
		internal static bool InitLoad(");
            
            #line 80 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info info)\r\n        {\r\n\t\t\tstring sql = @\"");
            
            #line 82 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildGetByPKSql(DBTable)));
            
            #line default
            #line hidden
            this.Write("\";\r\n\t\t\tbool result = false;\r\n\r\n            using (SqlConnection conn = new SqlCon" +
                    "nection(");
            
            #line 85 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Var.DBConnectionName));
            
            #line default
            #line hidden
            this.Write("Link.Connection))\r\n            {\r\n\t\t\t\tSqlCommand cmd = new SqlCommand(sql, conn);" +
                    "\r\n");
            
            #line 88 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"

foreach(var column in DBTable.Columns)
{
if (!column.IsPrimaryKey)
	continue;

            
            #line default
            #line hidden
            this.Write("\t\t\t\tSqlParameter para_");
            
            #line 94 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 94 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Schema.");
            
            #line 94 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(".GetSqlParameter();\r\n                para_");
            
            #line 95 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(".Value = info.");
            
            #line 95 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(";\r\n                cmd.Parameters.Add(para_");
            
            #line 96 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n");
            
            #line 98 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"

}

            
            #line default
            #line hidden
            this.Write("\t\t\t\ttry\r\n\t\t\t\t{\r\n                \tconn.Open();\r\n                \tusing (SqlDataRea" +
                    "der sdr = cmd.ExecuteReader())\r\n                \t{\r\n");
            
            #line 106 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"

foreach(var column in DBTable.Columns)
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\tint ");
            
            #line 110 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write("Ordinal = sdr.GetOrdinal(\"");
            
            #line 110 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.RawName));
            
            #line default
            #line hidden
            this.Write("\");\r\n");
            
            #line 111 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"

}

            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\tif (sdr.Read())\r\n\t\t\t\t\t\t{\t\t\t\t\t\t\t\r\n");
            
            #line 117 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"

foreach(var column in DBTable.Columns)
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\tif(sdr.IsDBNull(");
            
            #line 121 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write("Ordinal))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tinfo._set");
            
            #line 123 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 123 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildGetSqlReaderNullStr(column)));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t");
            
            #line 127 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildSetFieldValue(column)));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n");
            
            #line 130 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Get.tt"

}

            
            #line default
            #line hidden
            this.Write(@"                  
							result = true;
						}
					}
				}
				catch (Exception ex)
                {
					result = false;
                    throw ex;
                }
                finally
                {
                    if (conn.State != ConnectionState.Closed)
                        conn.Close();
					if (conn != null)
                        conn.Dispose();
                }
            }

            return result;
        }");
            this.Write("\r\n\t\t");
            this.Write("/// <summary>\r\n        /// 新增记录\r\n        /// </summary>\r\n        /// <param name=" +
                    "\"info\"></param>\r\n\t\tinternal static void InsertEntity(");
            
            #line 5 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Insert.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity info)\r\n        {\r\n\t\t\tif(info == null)\r\n\t\t\t\tthrow new Exception(\"Insert方法的参" +
                    "数为空。\");\r\n");
            
            #line 9 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Insert.tt"

foreach(var column in DBTable.Columns)
{
if (column.IsPrimaryKey && !column.Identity && !LanguageConvert.IsValueType(column.CSharpType))
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\r\n\t\t\tif(info.");
            
            #line 15 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Insert.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(" == null)\r\n\t\t\t\tthrow new Exception(\"主键不能为空值。\");\r\n");
            
            #line 17 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Insert.tt"

}
}

            
            #line default
            #line hidden
            this.Write("\t\t\r\n\t\t\tusing (SqlConnection conn = new SqlConnection(");
            
            #line 21 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Insert.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Var.DBConnectionName));
            
            #line default
            #line hidden
            this.Write("Link.Connection))\r\n            {\r\n\t\t\t\tstring sql = @\"");
            
            #line 23 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Insert.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.GetInsertSql(DBTable)));
            
            #line default
            #line hidden
            this.Write("\";\r\n\t\t\t\tSqlCommand cmd = new SqlCommand(sql, conn);\r\n\r\n");
            
            #line 26 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Insert.tt"

foreach(var column in DBTable.Columns)
{
if (column.Identity || column.Computed)
	continue;

            
            #line default
            #line hidden
            this.Write("\t\t\t\tSqlParameter para_");
            
            #line 32 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Insert.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 32 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Insert.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Schema.");
            
            #line 32 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Insert.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(".GetSqlParameter();\r\n                para_");
            
            #line 33 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Insert.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(".Value = ");
            
            #line 33 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Insert.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.SetParameterValueStr(column, "info")));
            
            #line default
            #line hidden
            this.Write(";\r\n                cmd.Parameters.Add(para_");
            
            #line 34 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Insert.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n");
            
            #line 36 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Insert.tt"

}

            
            #line default
            #line hidden
            this.Write(@"				try
                {
                    conn.Open();
                    cmd.ExecuteNonQuery();
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State != ConnectionState.Closed)
                        conn.Close();
					if (conn != null)
                        conn.Dispose();
                }
			}
		}");
            this.Write("\r\n\t\t");
            this.Write("/// <summary>\r\n        /// 根据主键更记录\r\n        /// </summary>\r\n        /// <param na" +
                    "me=\"info\"></param>\r\n\t\tpublic static void Update(");
            
            #line 5 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Update.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info info)\r\n        {\r\n\t\t\tif(info == null)\r\n\t\t\t\tthrow new Exception(\"UpdateByPK方法" +
                    "的参数为空。\");\r\n");
            
            #line 9 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Update.tt"

foreach(var column in DBTable.Columns)
{
if (column.IsPrimaryKey && !LanguageConvert.IsValueType(column.CSharpType))
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\r\n\t\t\tif(info.");
            
            #line 15 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Update.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(" == null)\r\n\t\t\t\tthrow new Exception(\"主键不能为空值。\");\r\n");
            
            #line 17 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Update.tt"

}	
}

            
            #line default
            #line hidden
            this.Write("\t\t\r\n            using (SqlConnection conn = new SqlConnection(");
            
            #line 21 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Update.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Var.DBConnectionName));
            
            #line default
            #line hidden
            this.Write("Link.Connection))\r\n            {\r\n                string sql = @\"");
            
            #line 23 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Update.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.GetUpdateByPKSql(DBTable)));
            
            #line default
            #line hidden
            this.Write("\";\r\n\r\n                SqlCommand cmd = new SqlCommand(sql, conn);\r\n\r\n");
            
            #line 27 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Update.tt"

foreach(var column in DBTable.Columns)
{
if (column.Computed)//column.Identity || 
	continue;
string ColName = Util.SetPascalCase(column.Name);

            
            #line default
            #line hidden
            this.Write("\t\t\t\tSqlParameter para_");
            
            #line 34 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Update.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ColName));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 34 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Update.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Schema.");
            
            #line 34 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Update.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(".GetSqlParameter();\r\n                para_");
            
            #line 35 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Update.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ColName));
            
            #line default
            #line hidden
            this.Write(".Value = info.");
            
            #line 35 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Update.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(";\r\n                cmd.Parameters.Add(para_");
            
            #line 36 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Update.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ColName));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n");
            
            #line 38 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Update.tt"

}

            
            #line default
            #line hidden
            this.Write("\t\t\t\tconn.Open();\r\n                cmd.ExecuteNonQuery();\r\n            }\r\n        " +
                    "}");
            this.Write("\r\n\t\t");
            this.Write("/// <summary>\r\n        /// 保存记录，如果不存在insert，如果存在update\r\n        /// </summary>\r\n " +
                    "       /// <param name=\"info\"></param>\t\t\r\n\t\tpublic static void Save(");
            
            #line 5 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Save.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info info)\r\n\t\t{\r\n\t\t\tif(info == null)\r\n\t\t\t\tthrow new Exception(\"Insert方法的参数为空。\");\r" +
                    "\n");
            
            #line 9 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Save.tt"

foreach(var column in DBTable.Columns)
{
if (column.IsPrimaryKey && !column.Identity && !LanguageConvert.IsValueType(column.CSharpType))
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\r\n\t\t\tif(info.");
            
            #line 15 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Save.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(" == null)\r\n\t\t\t\tthrow new Exception(\"主键不能为空值。\");\r\n");
            
            #line 17 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Save.tt"

}
}

            
            #line default
            #line hidden
            this.Write("\t\t\r\n\t\t\tusing (SqlConnection conn = new SqlConnection(");
            
            #line 21 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Save.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Var.DBConnectionName));
            
            #line default
            #line hidden
            this.Write("Link.Connection))\r\n            {\r\n                string sql = @\"");
            
            #line 23 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Save.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.GetSaveSqlForInfo(DBTable)));
            
            #line default
            #line hidden
            this.Write("\";\r\n\t\t\t\t\r\n                SqlCommand cmd = new SqlCommand(sql, conn);\r\n");
            
            #line 26 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Save.tt"

foreach(var column in DBTable.Columns)
{
if (column.Computed)//column.Identity || 
	continue;

            
            #line default
            #line hidden
            this.Write("\t\t\t\tSqlParameter para_");
            
            #line 32 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Save.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 32 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Save.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Schema.");
            
            #line 32 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Save.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(".GetSqlParameter();\r\n                para_");
            
            #line 33 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Save.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(".Value = ");
            
            #line 33 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Save.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.SetParameterValueStr(column, "info")));
            
            #line default
            #line hidden
            this.Write(";\r\n                cmd.Parameters.Add(para_");
            
            #line 34 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Save.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n");
            
            #line 36 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_Save.tt"

}

            
            #line default
            #line hidden
            this.Write(@"				try
                {
                    conn.Open();
                    cmd.ExecuteNonQuery();
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State != ConnectionState.Closed)
                        conn.Close();
					if (conn != null)
                        conn.Dispose();
                }
			}
		}");
            this.Write("\r\n\t\t");
            this.Write("/// <summary>\r\n        /// 根据条件返回所有记录\r\n        /// </summary>\r\n\t\t/// <param name=" +
                    "\"strWhere\">where条件</param>\r\n\t\t/// <param name=\"paras\">参数集合</param>\r\n\t\t/// <param" +
                    " name=\"orderbys\">排序字段，0表示ASC，1表示DESC</param>\r\n\t\tpublic static List<");
            
            #line 7 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info> SelectList(string strWhere, SqlParameter[] paras, List<KeyValuePair<string," +
                    " int>> orderbys)\r\n\t\t{\r\n\t\t\tList<");
            
            #line 9 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info> result = new List<");
            
            #line 9 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info>();\r\n\t\t\t\r\n\t\t\tstring sql = @\"");
            
            #line 11 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildGetByWhere(DBTable)));
            
            #line default
            #line hidden
            this.Write(@""";			
			string orderbyStr = """";
			if(orderbys != null)
			{
	            int i = 0;
	            foreach (KeyValuePair<string, int> item in orderbys)
	            {
	                if (i != 0)
	                {
	                    orderbyStr += "", "";
	                }
	                orderbyStr += item.Key + "" "";
	                if (item.Value == 0)
	                {
	                    orderbyStr += ""ASC"";
	                }
	                else
	                {
	                    orderbyStr += ""DESC"";
	                }
					i++;
	            }
			}
			
			string whereStr = (string.IsNullOrEmpty(strWhere)) ? """" : "" WHERE "" + strWhere;
			orderbyStr = (string.IsNullOrEmpty(orderbyStr)) ? """" : "" ORDERBY "" + strWhere;
			sql = sql + whereStr + orderbyStr;
			
			using (SqlConnection conn = new SqlConnection(");
            
            #line 39 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Var.DBConnectionName));
            
            #line default
            #line hidden
            this.Write(@"Link.Connection))
            {
                SqlCommand cmd = new SqlCommand(sql, conn);
				if(!string.IsNullOrEmpty(strWhere) && paras != null && paras.Length > 0)
                	cmd.Parameters.AddRange(paras);

				try
				{
					conn.Open();
                	using (SqlDataReader sdr = cmd.ExecuteReader())
                	{
");
            
            #line 50 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectList.tt"

foreach(var column in DBTable.Columns)
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\tint ");
            
            #line 54 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write("Ordinal = sdr.GetOrdinal(\"");
            
            #line 54 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.RawName));
            
            #line default
            #line hidden
            this.Write("\");\r\n");
            
            #line 55 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectList.tt"

}

            
            #line default
            #line hidden
            this.Write("                    \twhile (sdr.Read())\r\n                    \t{\r\n                " +
                    "        \t");
            
            #line 60 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info info = new ");
            
            #line 60 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info();\r\n\t\t\t\t\t\t\r\n");
            
            #line 62 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectList.tt"

foreach(var column in DBTable.Columns)
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\tif(sdr.IsDBNull(");
            
            #line 66 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write("Ordinal))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tinfo._set");
            
            #line 68 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 68 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildGetSqlReaderNullStr(column)));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t");
            
            #line 72 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildSetFieldValue(column)));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n");
            
            #line 75 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectList.tt"

}

            
            #line default
            #line hidden
            this.Write(@"                        	result.Add(info);
                    	}
                	}
				}
				catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State != ConnectionState.Closed)
                        conn.Close();
					if (conn != null)
                        conn.Dispose();
                }
            }

            return result;
		}
		
		/// <summary>
        /// 根据条件返回所有记录
        /// </summary>
		/// <param name=""strWhere"">where条件</param>
		/// <param name=""paras"">参数集合</param>
		public static List<");
            
            #line 103 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write(@"Info> SelectList(string strWhere, SqlParameter[] paras)
		{
			return SelectList(strWhere, paras, null);
		}
		
		/// <summary>
        /// 根据条件返回所有记录
        /// </summary>
		/// <param name=""strWhere"">where条件</param>
		/// <param name=""paras"">参数集合</param>
		public static List<");
            
            #line 113 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info> SelectList(string strWhere)\r\n\t\t{\r\n\t\t\treturn SelectList(strWhere, null, null" +
                    ");\r\n\t\t}");
            this.Write("\r\n\t\t");
            this.Write(@"/// <summary>
        /// 获取分页数据
        /// </summary>
		/// <param name=""strWhere"">where条件</param>
		/// <param name=""paras"">参数集合</param>
        /// <param name=""orderbys"">排序字段，0表示ASC，1表示DESC</param>
        /// <param name=""pageIndex"">第几页</param>
        /// <param name=""pageSize"">页大小</param>
        /// <param name=""pageCount"">分页数</param>
        /// <param name=""totalCount"">总记录数</param>
        /// <returns></returns>
		public static List<");
            
            #line 12 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectPagedList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info> PagedList(string strWhere, SqlParameter[] paras, List<KeyValuePair<string, " +
                    "int>> orderbys, int pageIndex, int pageSize, out int pageCount, out int totalCou" +
                    "nt)\r\n        {\r\n            List<");
            
            #line 14 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectPagedList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info> result = new List<");
            
            #line 14 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectPagedList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info>();\r\n\r\n\t\t\tstring whereStr = (string.IsNullOrEmpty(strWhere)) ? \"\" : \"WHERE \"" +
                    " + strWhere;\r\n            string orderbyStr = \"");
            
            #line 17 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectPagedList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.GetDefaultOrderby(DBTable)));
            
            #line default
            #line hidden
            this.Write(@""";
			if(orderbys != null)
			{
	            int i = 0;
	            foreach (KeyValuePair<string, int> item in orderbys)
	            {
	                if (i != 0)
	                {
	                    orderbyStr += "", "";
	                }
	                orderbyStr += item.Key + "" "";
	                if (item.Value == 0)
	                {
	                    orderbyStr += ""ASC"";
	                }
	                else
	                {
	                    orderbyStr += ""DESC"";
	                }
					i++;
	            }
			}

            string sql = string.Format(@""
SELECT * FROM (
	SELECT *
		, (ROW_NUMBER() OVER (ORDER BY {0})) AS RowNumber
		, (((ROW_NUMBER() OVER (ORDER BY {0})) - 1)/@PageSize) + 1 AS PageNumber		
	FROM {1} {2}
) as t
WHERE PageNumber = @PageIndex

SELECT @TotalCount = COUNT(*) FROM (
	SELECT *
		, (ROW_NUMBER() OVER (ORDER BY {0})) AS RowNumber
		, (((ROW_NUMBER() OVER (ORDER BY {0})) - 1)/@PageSize) + 1 AS PageNumber		
	FROM {1} {2}
) as t"", orderbyStr, """);
            
            #line 54 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectPagedList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("\", whereStr);\r\n\r\n            using (SqlConnection conn = new SqlConnection(");
            
            #line 56 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectPagedList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Var.DBConnectionName));
            
            #line default
            #line hidden
            this.Write(@"Link.Connection))
            {
                SqlCommand cmd = new SqlCommand(sql, conn);
				if(!string.IsNullOrEmpty(strWhere) && paras != null && paras.Length > 0)
                	cmd.Parameters.AddRange(paras);

                SqlParameter paraPerPageRows = new SqlParameter(""PageSize"", SqlDbType.Int);
                paraPerPageRows.Value = pageSize;
                cmd.Parameters.Add(paraPerPageRows);

                SqlParameter paraPageIndex = new SqlParameter(""PageIndex"", SqlDbType.Int);
                paraPageIndex.Value = pageIndex;
                cmd.Parameters.Add(paraPageIndex);

                SqlParameter paraTotalCount = new SqlParameter(""TotalCount"", SqlDbType.Int);
                paraTotalCount.Direction = ParameterDirection.Output;
                cmd.Parameters.Add(paraTotalCount);

				try
				{
					conn.Open();
                	using (SqlDataReader sdr = cmd.ExecuteReader())
                	{
");
            
            #line 79 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectPagedList.tt"

foreach(var column in DBTable.Columns)
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\tint ");
            
            #line 83 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectPagedList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write("Ordinal = sdr.GetOrdinal(\"");
            
            #line 83 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectPagedList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.RawName));
            
            #line default
            #line hidden
            this.Write("\");\r\n");
            
            #line 84 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectPagedList.tt"

}

            
            #line default
            #line hidden
            this.Write("                    \twhile (sdr.Read())\r\n                    \t{\r\n                " +
                    "        \t");
            
            #line 89 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectPagedList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info info = new ");
            
            #line 89 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectPagedList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info();\r\n\t\t\t\t\t\t\r\n");
            
            #line 91 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectPagedList.tt"

foreach(var column in DBTable.Columns)
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\tif(sdr.IsDBNull(");
            
            #line 95 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectPagedList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write("Ordinal))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tinfo._set");
            
            #line 97 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectPagedList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 97 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectPagedList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildGetSqlReaderNullStr(column)));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t");
            
            #line 101 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectPagedList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildSetFieldValue(column)));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n");
            
            #line 104 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectPagedList.tt"

}

            
            #line default
            #line hidden
            this.Write(@"                        	result.Add(info);
                    	}
                	}

                	totalCount = Convert.ToInt32(paraTotalCount.Value);
                	pageCount = (totalCount + pageSize - 1) / pageSize;
				}
				catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State != ConnectionState.Closed)
                        conn.Close();
					if (conn != null)
                        conn.Dispose();
                }
            }

            return result;
        }
		
		/// <summary>
        /// 获取分页数据,包括所有列
        /// </summary>
        /// <param name=""orderbys"">排序字段，0表示ASC，1表示DESC</param>
        /// <param name=""pageIndex"">第几页</param>
        /// <param name=""pageSize"">页大小</param>
        /// <param name=""pageCount"">分页数</param>
        /// <param name=""totalCount"">总记录数</param>
        /// <returns></returns>
		public static List<");
            
            #line 139 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectPagedList.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info> PagedList(List<KeyValuePair<string, int>> orderbys, int pageIndex, int page" +
                    "Size, out int pageCount, out int totalCount)\r\n\t\t{\r\n\t\t\treturn PagedList(\"\", null," +
                    " orderbys, pageIndex, pageSize, out pageCount, out totalCount);\r\n\t\t}\r\n\t\t\r\n\t\t");
            this.Write("\r\n\t\t");
            this.Write(@"/// <summary>
        /// 根据条件返回前N条记录
        /// </summary>
		/// <param name=""topN"">返回几条记录</param>
		/// <param name=""strWhere"">where条件</param>
		/// <param name=""paras"">参数集合</param>
		/// <param name=""orderbys"">排序字段，0表示ASC，1表示DESC</param>
		public static List<");
            
            #line 8 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopN.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info> SelectTopN(int topN, string strWhere, SqlParameter[] paras, List<KeyValuePa" +
                    "ir<string, int>> orderbys)\r\n\t\t{\r\n\t\t\tList<");
            
            #line 10 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopN.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info> result = new List<");
            
            #line 10 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopN.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info>();\r\n\t\t\tstring sql = @\"");
            
            #line 11 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopN.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildSQL_TopNByWhere(DBTable)));
            
            #line default
            #line hidden
            this.Write(@""";
			
			string orderbyStr = """";
			if(orderbys != null)
			{
	            int i = 0;
	            foreach (KeyValuePair<string, int> item in orderbys)
	            {
	                if (i != 0)
	                {
	                    orderbyStr += "", "";
	                }
	                orderbyStr += item.Key + "" "";
	                if (item.Value == 0)
	                {
	                    orderbyStr += ""ASC"";
	                }
	                else
	                {
	                    orderbyStr += ""DESC"";
	                }
					i++;
	            }
			}
			
			string whereStr = (string.IsNullOrEmpty(strWhere)) ? """" : "" WHERE "" + strWhere;
			orderbyStr = (string.IsNullOrEmpty(orderbyStr)) ? """" : "" ORDERBY "" + strWhere;
			sql = sql + whereStr + orderbyStr;
			sql = string.Format(sql, topN);

            using (SqlConnection conn = new SqlConnection(");
            
            #line 41 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopN.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Var.DBConnectionName));
            
            #line default
            #line hidden
            this.Write(@"Link.Connection))
            {
				SqlCommand cmd = new SqlCommand(sql, conn);
				if(!string.IsNullOrEmpty(strWhere) && paras != null && paras.Length > 0)
                	cmd.Parameters.AddRange(paras);
				try
				{
                	conn.Open();
                	using (SqlDataReader sdr = cmd.ExecuteReader())
                	{
");
            
            #line 51 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopN.tt"

foreach(var column in DBTable.Columns)
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\tint ");
            
            #line 55 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopN.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write("Ordinal = sdr.GetOrdinal(\"");
            
            #line 55 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopN.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.RawName));
            
            #line default
            #line hidden
            this.Write("\");\r\n");
            
            #line 56 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopN.tt"

}

            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\twhile (sdr.Read())\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t");
            
            #line 62 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopN.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info info = new ");
            
            #line 62 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopN.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info();\r\n");
            
            #line 63 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopN.tt"

foreach(var column in DBTable.Columns)
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\tif(sdr.IsDBNull(");
            
            #line 67 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopN.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write("Ordinal))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tinfo._set");
            
            #line 69 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopN.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 69 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopN.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildGetSqlReaderNullStr(column)));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t");
            
            #line 73 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopN.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildSetFieldValue(column)));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n");
            
            #line 76 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopN.tt"

}

            
            #line default
            #line hidden
            this.Write(@"                  		result.Add(info);
						}
					}
				}
				catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State != ConnectionState.Closed)
                        conn.Close();
					if (conn != null)
                        conn.Dispose();
                }
            }

            return result;
		}
		
		/// <summary>
        /// 根据条件返回前N条记录
        /// </summary>
		/// <param name=""topN"">返回几条记录</param>
		/// <param name=""strWhere"">where条件</param>
		/// <param name=""paras"">参数集合</param>
		public static List<");
            
            #line 104 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopN.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write(@"Info> SelectTopN(int topN, string strWhere, SqlParameter[] paras)
		{
			return SelectTopN(topN, strWhere, paras, null);
		}
		
		/// <summary>
        /// 根据条件返回前N条记录
        /// </summary>
		/// <param name=""topN"">返回几条记录</param>
		/// <param name=""strWhere"">where条件</param>
		/// <param name=""paras"">参数集合</param>
		public static List<");
            
            #line 115 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopN.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info> SelectTopN(int topN, string strWhere)\r\n\t\t{\r\n\t\t\treturn SelectTopN(topN, strW" +
                    "here, null, null);\r\n\t\t}");
            this.Write("\r\n\t\t");
            this.Write("/// <summary>\r\n        /// 根据条件返回第一条记录\r\n        /// </summary>\r\n\t\t/// <param name" +
                    "=\"strWhere\">where条件</param>\r\n\t\t/// <param name=\"paras\">参数集合</param>\r\n\t\t/// <para" +
                    "m name=\"orderbys\">排序字段，0表示ASC，1表示DESC</param>\r\n\t\tpublic static ");
            
            #line 7 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopOne.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info SelectTopOne(string strWhere, SqlParameter[] paras, List<KeyValuePair<string" +
                    ", int>> orderbys)\r\n\t\t{\r\n\t\t\tstring sql = @\"");
            
            #line 9 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopOne.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildSQL_TopOneByWhere(DBTable)));
            
            #line default
            #line hidden
            this.Write(@""";
			
			string orderbyStr = """";
			if(orderbys != null)
			{
	            int i = 0;
	            foreach (KeyValuePair<string, int> item in orderbys)
	            {
	                if (i != 0)
	                {
	                    orderbyStr += "", "";
	                }
	                orderbyStr += item.Key + "" "";
	                if (item.Value == 0)
	                {
	                    orderbyStr += ""ASC"";
	                }
	                else
	                {
	                    orderbyStr += ""DESC"";
	                }
					i++;
	            }
			}
			
			string whereStr = (string.IsNullOrEmpty(strWhere)) ? """" : "" WHERE "" + strWhere;
			orderbyStr = (string.IsNullOrEmpty(orderbyStr)) ? """" : "" ORDERBY "" + strWhere;
			sql = sql + whereStr + orderbyStr;

            ");
            
            #line 38 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopOne.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info info = null;\r\n            using (SqlConnection conn = new SqlConnection(");
            
            #line 39 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopOne.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Var.DBConnectionName));
            
            #line default
            #line hidden
            this.Write(@"Link.Connection))
            {
				SqlCommand cmd = new SqlCommand(sql, conn);
				if(!string.IsNullOrEmpty(strWhere) && paras != null && paras.Length > 0)
                	cmd.Parameters.AddRange(paras);
				try
				{
                	conn.Open();
                	using (SqlDataReader sdr = cmd.ExecuteReader())
                	{
");
            
            #line 49 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopOne.tt"

foreach(var column in DBTable.Columns)
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\tint ");
            
            #line 53 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopOne.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write("Ordinal = sdr.GetOrdinal(\"");
            
            #line 53 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopOne.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.RawName));
            
            #line default
            #line hidden
            this.Write("\");\r\n");
            
            #line 54 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopOne.tt"

}

            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\tif (sdr.Read())\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tinfo = new ");
            
            #line 60 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopOne.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info();\r\n");
            
            #line 61 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopOne.tt"

foreach(var column in DBTable.Columns)
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\tif(sdr.IsDBNull(");
            
            #line 65 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopOne.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write("Ordinal))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tinfo._set");
            
            #line 67 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopOne.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 67 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopOne.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildGetSqlReaderNullStr(column)));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t");
            
            #line 71 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopOne.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildSetFieldValue(column)));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n");
            
            #line 74 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopOne.tt"

}

            
            #line default
            #line hidden
            this.Write(@"                  
						}
					}
				}
				catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State != ConnectionState.Closed)
                        conn.Close();
					if (conn != null)
                        conn.Dispose();
                }
            }

            return info;
		}
		
		/// <summary>
        /// 根据条件返回第一条记录
        /// </summary>
		/// <param name=""strWhere"">where条件</param>
		/// <param name=""paras"">参数集合</param>
		public static ");
            
            #line 101 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopOne.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write(@"Info SelectTopOne(string strWhere, SqlParameter[] paras)
		{
			return SelectTopOne(strWhere, paras, null);
		}
		
		/// <summary>
        /// 根据条件返回第一条记录
        /// </summary>
		/// <param name=""strWhere"">where条件</param>
		/// <param name=""paras"">参数集合</param>
		public static ");
            
            #line 111 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Model\DTO_SelectTopOne.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info SelectTopOne(string strWhere)\r\n\t\t{\r\n\t\t\treturn SelectTopOne(strWhere, null, n" +
                    "ull);\r\n\t\t}");
            this.Write("\r\n\r\n\t\t");
            this.Write("/// <summary>\r\n        /// 根据主键删除记录\r\n        /// </summary>\r\n\t\tpublic static void" +
                    " Delete(");
            
            #line 4 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Delete.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.GetPKDefine(DBTable)));
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n            using (SqlConnection conn = new SqlConnection(");
            
            #line 6 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Delete.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Var.DBConnectionName));
            
            #line default
            #line hidden
            this.Write("Link.Connection))\r\n            {\r\n                string sql = @\"");
            
            #line 8 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Delete.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.GetDeleteByPKSql(DBTable)));
            
            #line default
            #line hidden
            this.Write("\";\r\n\r\n                SqlCommand cmd = new SqlCommand(sql, conn);\r\n\r\n");
            
            #line 12 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Delete.tt"

foreach(var column in DBTable.Columns)
{
if (!column.IsPrimaryKey)
	continue;

            
            #line default
            #line hidden
            this.Write("\t\t\t\tSqlParameter para_");
            
            #line 18 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Delete.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 18 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Delete.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Schema.");
            
            #line 18 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Delete.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(".GetSqlParameter();\r\n                para_");
            
            #line 19 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Delete.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(".Value = ");
            
            #line 19 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Delete.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write(";\r\n                cmd.Parameters.Add(para_");
            
            #line 20 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Delete.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n");
            
            #line 22 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Delete.tt"

}

            
            #line default
            #line hidden
            this.Write(@"				try
                {
                    conn.Open();
                    cmd.ExecuteNonQuery();
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State != ConnectionState.Closed)
                        conn.Close();
					if (conn != null)
                        conn.Dispose();
                }
            }
        }
		
		/// <summary>
        /// 按条件删除记录
        /// </summary>
        /// <param name=""strWhere"">where条件</param>
		/// <param name=""paras"">参数集合</param>
		public static void Delete(string strWhere, SqlParameter[] paras)
        {
            if (string.IsNullOrEmpty(strWhere))
            {
                throw new Exception(""where条件不能为空。"");
            }

            if (paras.Length == 0)
            {
                throw new Exception(""Parameters不能为空。"");
            }

            using (SqlConnection conn = new SqlConnection(");
            
            #line 61 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Delete.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Var.DBConnectionName));
            
            #line default
            #line hidden
            this.Write("Link.Connection))\r\n            {\r\n                StringBuilder sql = new StringB" +
                    "uilder();\r\n                sql.Append(@\"DELETE FROM [dbo].[");
            
            #line 64 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Delete.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write(@"] WHERE "");
				sql.Append(strWhere);

                SqlCommand cmd = new SqlCommand();
                cmd.Parameters.AddRange(paras);

                cmd.CommandText = sql.ToString();
                cmd.Connection = conn;

                try
                {
                    conn.Open();
                    cmd.ExecuteNonQuery();
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State != ConnectionState.Closed)
                        conn.Close();
					if (conn != null)
                        conn.Dispose();
                }
            }
        }");
            this.Write("\r\n\t\t");
            this.Write("/// <summary>\r\n        /// 根据主键判断记录是否存在\r\n        /// </summary>\r\n\t\tpublic static " +
                    "bool Exist(");
            
            #line 4 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Exist.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.GetPKDefine(DBTable)));
            
            #line default
            #line hidden
            this.Write(")\r\n\t\t{\r\n\t\t\tbool result = false;\r\n\t\t\tusing (SqlConnection conn = new SqlConnection" +
                    "(");
            
            #line 7 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Exist.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Var.DBConnectionName));
            
            #line default
            #line hidden
            this.Write("Link.Connection))\r\n            {\r\n                string sql = @\"");
            
            #line 9 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Exist.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.GetExistByPKSql(DBTable)));
            
            #line default
            #line hidden
            this.Write("\";\r\n\r\n                SqlCommand cmd = new SqlCommand(sql, conn);\r\n\r\n");
            
            #line 13 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Exist.tt"

foreach(var column in DBTable.Columns)
{
if (!column.IsPrimaryKey)
	continue;

            
            #line default
            #line hidden
            this.Write("\t\t\t\tSqlParameter para_");
            
            #line 19 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Exist.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 19 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Exist.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Schema.");
            
            #line 19 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Exist.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(".GetSqlParameter();\r\n                para_");
            
            #line 20 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Exist.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(".Value = ");
            
            #line 20 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Exist.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write(";\r\n                cmd.Parameters.Add(para_");
            
            #line 21 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Exist.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n");
            
            #line 23 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Exist.tt"

}

            
            #line default
            #line hidden
            this.Write(@"				try
                {
                    conn.Open();
                    object r = cmd.ExecuteScalar();
					if(r!= null)
					{
						int count = 0;
						int.TryParse(r.ToString(), out count);
						result = count > 0;
					}
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State != ConnectionState.Closed)
                        conn.Close();
					if (conn != null)
                        conn.Dispose();
                }
            }
			return result;
		}
		
		/// <summary>
        /// 根据条件判断记录是否存在
        /// </summary>
        /// <param name=""strWhere"">where条件</param>
		/// <param name=""paras"">参数集合</param>
		public static bool Exist(string strWhere, SqlParameter[] paras)
		{
			bool result = false;
			if (string.IsNullOrEmpty(strWhere))
            {
                throw new Exception(""where条件不能为空。"");
            }

            if (paras.Length == 0)
            {
                throw new Exception(""Parameters不能为空。"");
            }

            using (SqlConnection conn = new SqlConnection(");
            
            #line 70 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Exist.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Var.DBConnectionName));
            
            #line default
            #line hidden
            this.Write("Link.Connection))\r\n            {\r\n                StringBuilder sql = new StringB" +
                    "uilder();\r\n                sql.Append(@\"SELECT COUNT(*) FROM [dbo].[");
            
            #line 73 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Exist.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write(@"] WHERE "");
				sql.Append(strWhere);

                SqlCommand cmd = new SqlCommand();
                cmd.Parameters.AddRange(paras);

                cmd.CommandText = sql.ToString();
                cmd.Connection = conn;

                try
                {
                    conn.Open();
                    object r = cmd.ExecuteScalar();
					if(r!= null)
					{
						int count = 0;
						int.TryParse(r.ToString(), out count);
						result = count > 0;
					}
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State != ConnectionState.Closed)
                        conn.Close();
					if (conn != null)
                        conn.Dispose();
                }
            }
			return result;
		}");
            this.Write("\r\n\t\t");
            this.Write(@"/// <summary>
        /// 获取分页后的记录
        /// </summary>
        /// <param name=""columns"">列名称</param>
		/// <param name=""strWhere"">where条件</param>
		/// <param name=""paras"">参数集合</param>
        /// <param name=""orderbys"">排序字段，0表示ASC，1表示DESC</param>
        /// <param name=""pageIndex"">第几页</param>
        /// <param name=""pageSize"">页大小</param>
        /// <param name=""pageCount"">分页数</param>
        /// <param name=""totalCount"">总记录数</param>
        /// <returns></returns>
		public static DataSet PagedDataSet(string[] columns, string strWhere, SqlParameter[] paras, List<KeyValuePair<string, int>> orderbys, int pageIndex, int pageSize, out int pageCount, out int totalCount)
        {
            DataSet ds = new DataSet();
			string columnStr = ""*"";
			if(columns != null && columns.Length > 0)
			{
				columnStr = string.Join("", "", columns);
			}
			
			string whereStr = (string.IsNullOrEmpty(strWhere)) ? """" : ""WHERE "" + strWhere;
            string orderbyStr = """);
            
            #line 23 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_PagedDataSet.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.GetDefaultOrderby(DBTable)));
            
            #line default
            #line hidden
            this.Write(@""";
			if(orderbys != null)
			{
	            int i = 0;
	            foreach (KeyValuePair<string, int> item in orderbys)
	            {
	                if (i != 0)
	                {
	                    orderbyStr += "", "";
	                }
	                orderbyStr += item.Key + "" "";
	                if (item.Value == 0)
	                {
	                    orderbyStr += ""ASC"";
	                }
	                else
	                {
	                    orderbyStr += ""DESC"";
	                }
					i++;
	            }
			}

            string sql = string.Format(@""
SELECT * FROM (
	SELECT {3}
		, (ROW_NUMBER() OVER (ORDER BY {0})) AS RowNumber
		, (((ROW_NUMBER() OVER (ORDER BY {0})) - 1)/@PageSize) + 1 AS PageNumber		
	FROM {1} {2}
) as t
WHERE PageNumber = @PageIndex

SELECT @TotalCount = COUNT(*) FROM (
	SELECT {3}
		, (ROW_NUMBER() OVER (ORDER BY {0})) AS RowNumber
		, (((ROW_NUMBER() OVER (ORDER BY {0})) - 1)/@PageSize) + 1 AS PageNumber		
	FROM {1} {2}
) as t"", orderbyStr, """);
            
            #line 60 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_PagedDataSet.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("\", whereStr, columnStr);\r\n\r\n            using (SqlConnection conn = new SqlConnec" +
                    "tion(");
            
            #line 62 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_PagedDataSet.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Var.DBConnectionName));
            
            #line default
            #line hidden
            this.Write("Link.Connection))\r\n            {\r\n                SqlCommand cmd = new SqlCommand" +
                    "(sql, conn);\r\n\t\t\t\tif(!string.IsNullOrEmpty(strWhere) && paras != null && paras.L" +
                    "ength > 0)\r\n                \tcmd.Parameters.AddRange(paras);\r\n\t\t\t\t\r\n            " +
                    "    SqlParameter paraPerPageRows = new SqlParameter(\"PageSize\", SqlDbType.Int);\r" +
                    "\n                paraPerPageRows.Value = pageSize;\r\n                cmd.Paramete" +
                    "rs.Add(paraPerPageRows);\r\n\r\n                SqlParameter paraPageIndex = new Sql" +
                    "Parameter(\"PageIndex\", SqlDbType.Int);\r\n                paraPageIndex.Value = pa" +
                    "geIndex;\r\n                cmd.Parameters.Add(paraPageIndex);\r\n\r\n                " +
                    "SqlParameter paraTotalCount = new SqlParameter(\"TotalCount\", SqlDbType.Int);\r\n  " +
                    "              paraTotalCount.Direction = ParameterDirection.Output;\r\n           " +
                    "     cmd.Parameters.Add(paraTotalCount);\r\n\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n                \tSql" +
                    "DataAdapter sdr = new SqlDataAdapter(cmd);\r\n                \tsdr.Fill(ds);\r\n\t\t\t\t" +
                    "}\r\n\t\t\t\tcatch (Exception ex)\r\n                {\r\n                    throw ex;\r\n " +
                    "               }\r\n                finally\r\n                {\r\n                  " +
                    "  if (conn.State != ConnectionState.Closed)\r\n                        conn.Close(" +
                    ");\r\n\t\t\t\t\tif (conn != null)\r\n                        conn.Dispose();\r\n           " +
                    "     }\r\n\r\n                totalCount = Convert.ToInt32(paraTotalCount.Value);\r\n " +
                    "               pageCount = (totalCount + pageSize - 1) / pageSize;\r\n            " +
                    "}\r\n\r\n            return ds;\r\n        }\r\n\t\t\r\n\t\t/// <summary>\r\n        /// 获取分页后的记" +
                    "录,包括所有列\r\n        /// </summary>\r\n\t\t/// <param name=\"strWhere\">where条件</param>\r\n\t" +
                    "\t/// <param name=\"paras\">参数集合</param>\r\n        /// <param name=\"orderbys\">排序字段，0" +
                    "表示ASC，1表示DESC</param>\r\n        /// <param name=\"pageIndex\">第几页</param>\r\n        " +
                    "/// <param name=\"pageSize\">页大小</param>\r\n        /// <param name=\"pageCount\">分页数<" +
                    "/param>\r\n        /// <param name=\"totalCount\">总记录数</param>\r\n        /// <returns" +
                    "></returns>\r\n\t\tpublic static DataSet PagedDataSet(string strWhere, SqlParameter[" +
                    "] paras, List<KeyValuePair<string, int>> orderbys, int pageIndex, int pageSize, " +
                    "out int pageCount, out int totalCount)\r\n\t\t{\r\n\t\t\treturn PagedDataSet(null, strWhe" +
                    "re, paras, orderbys, pageIndex, pageSize, out pageCount, out totalCount);\r\n\t\t}\r\n" +
                    "\t\t\r\n\t\t/// <summary>\r\n        /// 获取分页后的记录,包括所有列\r\n        /// </summary>\r\n       " +
                    " /// <param name=\"orderbys\">排序字段，0表示ASC，1表示DESC</param>\r\n        /// <param name" +
                    "=\"pageIndex\">第几页</param>\r\n        /// <param name=\"pageSize\">页大小</param>\r\n      " +
                    "  /// <param name=\"pageCount\">分页数</param>\r\n        /// <param name=\"totalCount\">" +
                    "总记录数</param>\r\n        /// <returns></returns>\r\n\t\tpublic static DataSet PagedData" +
                    "Set(List<KeyValuePair<string, int>> orderbys, int pageIndex, int pageSize, out i" +
                    "nt pageCount, out int totalCount)\r\n\t\t{\r\n\t\t\treturn PagedDataSet(null, \"\", null, o" +
                    "rderbys, pageIndex, pageSize, out pageCount, out totalCount);\r\n\t\t}");
            this.Write("\r\n\t\t");
            this.Write(@"/// <summary>
        /// 根据条件返回所有记录
        /// </summary>
		/// <param name=""strWhere"">where条件</param>
		/// <param name=""paras"">参数集合</param>
		/// <param name=""orderbys"">排序字段，0表示ASC，1表示DESC</param>
		public static DataSet SelectDataSet(string[] columns, string strWhere, SqlParameter[] paras, List<KeyValuePair<string, int>> orderbys)
		{
			DataSet ds = new DataSet();

			string columnStr = @""");
            
            #line 11 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_SelectDataSet.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.GetColumnString(DBTable)));
            
            #line default
            #line hidden
            this.Write(@""";
			if(columns != null && columns.Length > 0)
			{
				columnStr = string.Join("", "", columns);
			}
			
			string orderbyStr = """";
			if(orderbys != null)
			{
	            int i = 0;
	            foreach (KeyValuePair<string, int> item in orderbys)
	            {
	                if (i != 0)
	                {
	                    orderbyStr += "", "";
	                }
	                orderbyStr += item.Key + "" "";
	                if (item.Value == 0)
	                {
	                    orderbyStr += ""ASC"";
	                }
	                else
	                {
	                    orderbyStr += ""DESC"";
	                }
					i++;
	            }
			}
			
			string whereStr = (string.IsNullOrEmpty(strWhere)) ? """" : "" WHERE "" + strWhere;
			orderbyStr = (string.IsNullOrEmpty(orderbyStr)) ? """" : "" ORDERBY "" + strWhere;
			
			string sql = string.Format(@""SELECT {0} FROM [{1}].[{2}] {3} {4}""
				, columnStr, """);
            
            #line 44 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_SelectDataSet.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Schema));
            
            #line default
            #line hidden
            this.Write("\", \"");
            
            #line 44 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_SelectDataSet.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.RawName));
            
            #line default
            #line hidden
            this.Write("\", whereStr, orderbyStr);\r\n\t\t\t\r\n\t\t\tusing (SqlConnection conn = new SqlConnection(" +
                    "");
            
            #line 46 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_SelectDataSet.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Var.DBConnectionName));
            
            #line default
            #line hidden
            this.Write(@"Link.Connection))
            {
                SqlCommand cmd = new SqlCommand(sql, conn);
				if(!string.IsNullOrEmpty(strWhere) && paras != null && paras.Length > 0)
                	cmd.Parameters.AddRange(paras);

				try
				{
                	SqlDataAdapter sdr = new SqlDataAdapter(cmd);
                	sdr.Fill(ds);
				}
				catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State != ConnectionState.Closed)
                        conn.Close();
					if (conn != null)
                        conn.Dispose();
                }
            }

            return ds;
		}
		
		/// <summary>
        /// 根据条件返回所有记录
        /// </summary>
		/// <param name=""strWhere"">where条件</param>
		/// <param name=""paras"">参数集合</param>
		public static DataSet SelectDataSet(string strWhere, SqlParameter[] paras)
		{
			return SelectDataSet(null, strWhere, paras, null);
		}
		
		/// <summary>
        /// 根据条件返回所有记录
        /// </summary>
		/// <param name=""strWhere"">where条件</param>
		/// <param name=""paras"">参数集合</param>
		public static DataSet SelectDataSet(string strWhere)
		{
			return SelectDataSet(null, strWhere, null, null);
		}");
            this.Write("\r\n\r\n\t\t");
            this.Write("/// <summary>\r\n        /// 根据主键获取记录\r\n        /// </summary>\r\n\t\tinternal static ");
            
            #line 4 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_GetEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity GetEntity(");
            
            #line 4 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_GetEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.GetPKDefine(DBTable)));
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n\t\t\tstring sql = @\"");
            
            #line 6 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_GetEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildGetByPKSql(DBTable)));
            
            #line default
            #line hidden
            this.Write("\";\r\n\r\n            ");
            
            #line 8 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_GetEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity info = null;\r\n            using (SqlConnection conn = new SqlConnection(");
            
            #line 9 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_GetEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Var.DBConnectionName));
            
            #line default
            #line hidden
            this.Write("Link.Connection))\r\n            {\r\n\t\t\t\tSqlCommand cmd = new SqlCommand(sql, conn);" +
                    "\r\n");
            
            #line 12 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_GetEntity.tt"

foreach(var column in DBTable.Columns)
{
if (!column.IsPrimaryKey)
	continue;

            
            #line default
            #line hidden
            this.Write("\t\t\t\tSqlParameter para_");
            
            #line 18 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_GetEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 18 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_GetEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Schema.");
            
            #line 18 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_GetEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(".GetSqlParameter();\r\n                para_");
            
            #line 19 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_GetEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(".Value = ");
            
            #line 19 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_GetEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write(";\r\n                cmd.Parameters.Add(para_");
            
            #line 20 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_GetEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n");
            
            #line 22 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_GetEntity.tt"

}

            
            #line default
            #line hidden
            this.Write("\t\t\t\ttry\r\n\t\t\t\t{\r\n                \tconn.Open();\r\n                \tusing (SqlDataRea" +
                    "der sdr = cmd.ExecuteReader())\r\n                \t{\r\n");
            
            #line 30 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_GetEntity.tt"

foreach(var column in DBTable.Columns)
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\tint ");
            
            #line 34 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_GetEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write("Ordinal = sdr.GetOrdinal(\"");
            
            #line 34 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_GetEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.RawName));
            
            #line default
            #line hidden
            this.Write("\");\r\n");
            
            #line 35 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_GetEntity.tt"

}

            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\tif (sdr.Read())\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tinfo = new ");
            
            #line 41 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_GetEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity();\r\n");
            
            #line 42 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_GetEntity.tt"

foreach(var column in DBTable.Columns)
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\tif(sdr.IsDBNull(");
            
            #line 46 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_GetEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write("Ordinal))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tinfo._set");
            
            #line 48 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_GetEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 48 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_GetEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildGetSqlReaderNullStr(column)));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t");
            
            #line 52 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_GetEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildSetFieldValue(column)));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n");
            
            #line 55 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_GetEntity.tt"

}

            
            #line default
            #line hidden
            this.Write(@"                  
						}
					}
				}
				catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State != ConnectionState.Closed)
                        conn.Close();
					if (conn != null)
                        conn.Dispose();
                }
            }

            return info;
        }");
            this.Write("\r\n\t\t");
            this.Write("/// <summary>\r\n        /// 根据主键获取记录\r\n        /// </summary>\r\n\t\tinternal static bo" +
                    "ol InitEntity(");
            
            #line 4 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InitEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity info)\r\n        {\r\n\t\t\tstring sql = @\"");
            
            #line 6 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InitEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildGetByPKSql(DBTable)));
            
            #line default
            #line hidden
            this.Write("\";\r\n\t\t\tbool result = false;\r\n\r\n            using (SqlConnection conn = new SqlCon" +
                    "nection(");
            
            #line 9 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InitEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Var.DBConnectionName));
            
            #line default
            #line hidden
            this.Write("Link.Connection))\r\n            {\r\n\t\t\t\tSqlCommand cmd = new SqlCommand(sql, conn);" +
                    "\r\n");
            
            #line 12 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InitEntity.tt"

foreach(var column in DBTable.Columns)
{
if (!column.IsPrimaryKey)
	continue;

            
            #line default
            #line hidden
            this.Write("\t\t\t\tSqlParameter para_");
            
            #line 18 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InitEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 18 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InitEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Schema.");
            
            #line 18 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InitEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(".GetSqlParameter();\r\n                para_");
            
            #line 19 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InitEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(".Value = info.");
            
            #line 19 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InitEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(";\r\n                cmd.Parameters.Add(para_");
            
            #line 20 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InitEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n");
            
            #line 22 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InitEntity.tt"

}

            
            #line default
            #line hidden
            this.Write("\t\t\t\ttry\r\n\t\t\t\t{\r\n                \tconn.Open();\r\n                \tusing (SqlDataRea" +
                    "der sdr = cmd.ExecuteReader())\r\n                \t{\r\n");
            
            #line 30 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InitEntity.tt"

foreach(var column in DBTable.Columns)
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\tint ");
            
            #line 34 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InitEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write("Ordinal = sdr.GetOrdinal(\"");
            
            #line 34 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InitEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.RawName));
            
            #line default
            #line hidden
            this.Write("\");\r\n");
            
            #line 35 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InitEntity.tt"

}

            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\tif (sdr.Read())\r\n\t\t\t\t\t\t{\t\t\t\t\t\t\t\r\n");
            
            #line 41 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InitEntity.tt"

foreach(var column in DBTable.Columns)
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\tif(sdr.IsDBNull(");
            
            #line 45 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InitEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write("Ordinal))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tinfo._set");
            
            #line 47 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InitEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 47 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InitEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildGetSqlReaderNullStr(column)));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t");
            
            #line 51 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InitEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildSetFieldValue(column)));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n");
            
            #line 54 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InitEntity.tt"

}

            
            #line default
            #line hidden
            this.Write(@"                  
							result = true;
						}
					}
				}
				catch (Exception ex)
                {
					result = false;
                    throw ex;
                }
                finally
                {
                    if (conn.State != ConnectionState.Closed)
                        conn.Close();
					if (conn != null)
                        conn.Dispose();
                }
            }

            return result;
        }
		");
            this.Write("\r\n\t\t");
            this.Write("/// <summary>\r\n        /// 新增记录\r\n        /// </summary>\r\n        /// <param name=" +
                    "\"info\"></param>\r\n\t\tpublic static void Insert(");
            
            #line 5 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InsertEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Info info)\r\n        {\r\n\t\t\tif(info == null)\r\n\t\t\t\tthrow new Exception(\"Insert方法的参数为" +
                    "空。\");\r\n");
            
            #line 9 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InsertEntity.tt"

foreach(var column in DBTable.Columns)
{
if (column.IsPrimaryKey && !column.Identity && !LanguageConvert.IsValueType(column.CSharpType))
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\r\n\t\t\tif(info.");
            
            #line 15 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InsertEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(" == null)\r\n\t\t\t\tthrow new Exception(\"主键不能为空值。\");\r\n");
            
            #line 17 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InsertEntity.tt"

}
}

            
            #line default
            #line hidden
            this.Write("\t\t\r\n\t\t\tusing (SqlConnection conn = new SqlConnection(");
            
            #line 21 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InsertEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Var.DBConnectionName));
            
            #line default
            #line hidden
            this.Write("Link.Connection))\r\n            {\r\n\t\t\t\tstring sql = @\"");
            
            #line 23 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InsertEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.GetInsertSql(DBTable)));
            
            #line default
            #line hidden
            this.Write("\";\r\n\t\t\t\tSqlCommand cmd = new SqlCommand(sql, conn);\r\n\r\n");
            
            #line 26 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InsertEntity.tt"

foreach(var column in DBTable.Columns)
{
if (column.Identity || column.Computed)
	continue;

            
            #line default
            #line hidden
            this.Write("\t\t\t\tSqlParameter para_");
            
            #line 32 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InsertEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 32 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InsertEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Schema.");
            
            #line 32 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InsertEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(".GetSqlParameter();\r\n                para_");
            
            #line 33 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InsertEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(".Value = ");
            
            #line 33 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InsertEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.SetParameterValueStr(column, "info")));
            
            #line default
            #line hidden
            this.Write(";\r\n                cmd.Parameters.Add(para_");
            
            #line 34 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InsertEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n");
            
            #line 36 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_InsertEntity.tt"

}

            
            #line default
            #line hidden
            this.Write(@"				try
                {
                    conn.Open();
                    cmd.ExecuteNonQuery();
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State != ConnectionState.Closed)
                        conn.Close();
					if (conn != null)
                        conn.Dispose();
                }
			}
		}");
            this.Write("\r\n\t\t");
            this.Write("/// <summary>\r\n        /// 根据条件返回所有记录\r\n        /// </summary>\r\n\t\t/// <param name=" +
                    "\"strWhere\">where条件</param>\r\n\t\t/// <param name=\"paras\">参数集合</param>\r\n\t\t/// <param" +
                    " name=\"orderbys\">排序字段，0表示ASC，1表示DESC</param>\r\n\t\tinternal static List<");
            
            #line 7 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_ListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity> ListEntities(string strWhere, SqlParameter[] paras, List<KeyValuePair<str" +
                    "ing, int>> orderbys)\r\n\t\t{\r\n\t\t\tList<");
            
            #line 9 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_ListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity> result = new List<");
            
            #line 9 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_ListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity>();\r\n\t\t\t\r\n\t\t\tstring sql = @\"");
            
            #line 11 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_ListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildGetByWhere(DBTable)));
            
            #line default
            #line hidden
            this.Write(@""";			
			string orderbyStr = """";
			if(orderbys != null)
			{
	            int i = 0;
	            foreach (KeyValuePair<string, int> item in orderbys)
	            {
	                if (i != 0)
	                {
	                    orderbyStr += "", "";
	                }
	                orderbyStr += item.Key + "" "";
	                if (item.Value == 0)
	                {
	                    orderbyStr += ""ASC"";
	                }
	                else
	                {
	                    orderbyStr += ""DESC"";
	                }
					i++;
	            }
			}
			
			string whereStr = (string.IsNullOrEmpty(strWhere)) ? """" : "" WHERE "" + strWhere;
			orderbyStr = (string.IsNullOrEmpty(orderbyStr)) ? """" : "" ORDERBY "" + strWhere;
			sql = sql + whereStr + orderbyStr;
			
			using (SqlConnection conn = new SqlConnection(");
            
            #line 39 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_ListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Var.DBConnectionName));
            
            #line default
            #line hidden
            this.Write(@"Link.Connection))
            {
                SqlCommand cmd = new SqlCommand(sql, conn);
				if(!string.IsNullOrEmpty(strWhere) && paras != null && paras.Length > 0)
                	cmd.Parameters.AddRange(paras);

				try
				{
					conn.Open();
                	using (SqlDataReader sdr = cmd.ExecuteReader())
                	{
");
            
            #line 50 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_ListEntities.tt"

foreach(var column in DBTable.Columns)
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\tint ");
            
            #line 54 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_ListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write("Ordinal = sdr.GetOrdinal(\"");
            
            #line 54 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_ListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.RawName));
            
            #line default
            #line hidden
            this.Write("\");\r\n");
            
            #line 55 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_ListEntities.tt"

}

            
            #line default
            #line hidden
            this.Write("                    \twhile (sdr.Read())\r\n                    \t{\r\n                " +
                    "        \t");
            
            #line 60 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_ListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity info = new ");
            
            #line 60 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_ListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity();\r\n\t\t\t\t\t\t\r\n");
            
            #line 62 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_ListEntities.tt"

foreach(var column in DBTable.Columns)
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\tif(sdr.IsDBNull(");
            
            #line 66 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_ListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write("Ordinal))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tinfo._set");
            
            #line 68 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_ListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 68 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_ListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildGetSqlReaderNullStr(column)));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t");
            
            #line 72 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_ListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildSetFieldValue(column)));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n");
            
            #line 75 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_ListEntities.tt"

}

            
            #line default
            #line hidden
            this.Write(@"                        	result.Add(info);
                    	}
                	}
				}
				catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State != ConnectionState.Closed)
                        conn.Close();
					if (conn != null)
                        conn.Dispose();
                }
            }

            return result;
		}
		
		/// <summary>
        /// 根据条件返回所有记录
        /// </summary>
		/// <param name=""strWhere"">where条件</param>
		/// <param name=""paras"">参数集合</param>
		internal static List<");
            
            #line 103 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_ListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write(@"Entity> ListEntities(string strWhere, SqlParameter[] paras)
		{
			return ListEntities(strWhere, paras, null);
		}
		
		/// <summary>
        /// 根据条件返回所有记录
        /// </summary>
		/// <param name=""strWhere"">where条件</param>
		/// <param name=""paras"">参数集合</param>
		internal static List<");
            
            #line 113 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_ListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity> ListEntities(string strWhere)\r\n\t\t{\r\n\t\t\treturn ListEntities(strWhere, null" +
                    ", null);\r\n\t\t}");
            this.Write("\r\n\t\t");
            this.Write(@"/// <summary>
        /// 获取分页数据
        /// </summary>
		/// <param name=""strWhere"">where条件</param>
		/// <param name=""paras"">参数集合</param>
        /// <param name=""orderbys"">排序字段，0表示ASC，1表示DESC</param>
        /// <param name=""pageIndex"">第几页</param>
        /// <param name=""pageSize"">页大小</param>
        /// <param name=""pageCount"">分页数</param>
        /// <param name=""totalCount"">总记录数</param>
        /// <returns></returns>
		internal static List<");
            
            #line 12 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_PagedListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity> PagedListEntities(string strWhere, SqlParameter[] paras, List<KeyValuePai" +
                    "r<string, int>> orderbys, int pageIndex, int pageSize, out int pageCount, out in" +
                    "t totalCount)\r\n        {\r\n            List<");
            
            #line 14 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_PagedListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity> result = new List<");
            
            #line 14 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_PagedListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity>();\r\n\r\n\t\t\tstring whereStr = (string.IsNullOrEmpty(strWhere)) ? \"\" : \"WHERE" +
                    " \" + strWhere;\r\n            string orderbyStr = \"");
            
            #line 17 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_PagedListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.GetDefaultOrderby(DBTable)));
            
            #line default
            #line hidden
            this.Write(@""";
			if(orderbys != null)
			{
	            int i = 0;
	            foreach (KeyValuePair<string, int> item in orderbys)
	            {
	                if (i != 0)
	                {
	                    orderbyStr += "", "";
	                }
	                orderbyStr += item.Key + "" "";
	                if (item.Value == 0)
	                {
	                    orderbyStr += ""ASC"";
	                }
	                else
	                {
	                    orderbyStr += ""DESC"";
	                }
					i++;
	            }
			}

            string sql = string.Format(@""
SELECT * FROM (
	SELECT *
		, (ROW_NUMBER() OVER (ORDER BY {0})) AS RowNumber
		, (((ROW_NUMBER() OVER (ORDER BY {0})) - 1)/@PageSize) + 1 AS PageNumber		
	FROM {1} {2}
) as t
WHERE PageNumber = @PageIndex

SELECT @TotalCount = COUNT(*) FROM (
	SELECT *
		, (ROW_NUMBER() OVER (ORDER BY {0})) AS RowNumber
		, (((ROW_NUMBER() OVER (ORDER BY {0})) - 1)/@PageSize) + 1 AS PageNumber		
	FROM {1} {2}
) as t"", orderbyStr, """);
            
            #line 54 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_PagedListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("\", whereStr);\r\n\r\n            using (SqlConnection conn = new SqlConnection(");
            
            #line 56 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_PagedListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Var.DBConnectionName));
            
            #line default
            #line hidden
            this.Write(@"Link.Connection))
            {
                SqlCommand cmd = new SqlCommand(sql, conn);
				if(!string.IsNullOrEmpty(strWhere) && paras != null && paras.Length > 0)
                	cmd.Parameters.AddRange(paras);

                SqlParameter paraPerPageRows = new SqlParameter(""PageSize"", SqlDbType.Int);
                paraPerPageRows.Value = pageSize;
                cmd.Parameters.Add(paraPerPageRows);

                SqlParameter paraPageIndex = new SqlParameter(""PageIndex"", SqlDbType.Int);
                paraPageIndex.Value = pageIndex;
                cmd.Parameters.Add(paraPageIndex);

                SqlParameter paraTotalCount = new SqlParameter(""TotalCount"", SqlDbType.Int);
                paraTotalCount.Direction = ParameterDirection.Output;
                cmd.Parameters.Add(paraTotalCount);

				try
				{
					conn.Open();
                	using (SqlDataReader sdr = cmd.ExecuteReader())
                	{
");
            
            #line 79 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_PagedListEntities.tt"

foreach(var column in DBTable.Columns)
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\tint ");
            
            #line 83 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_PagedListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write("Ordinal = sdr.GetOrdinal(\"");
            
            #line 83 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_PagedListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.RawName));
            
            #line default
            #line hidden
            this.Write("\");\r\n");
            
            #line 84 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_PagedListEntities.tt"

}

            
            #line default
            #line hidden
            this.Write("                    \twhile (sdr.Read())\r\n                    \t{\r\n                " +
                    "        \t");
            
            #line 89 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_PagedListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity info = new ");
            
            #line 89 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_PagedListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity();\r\n\t\t\t\t\t\t\r\n");
            
            #line 91 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_PagedListEntities.tt"

foreach(var column in DBTable.Columns)
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\tif(sdr.IsDBNull(");
            
            #line 95 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_PagedListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write("Ordinal))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tinfo._set");
            
            #line 97 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_PagedListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 97 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_PagedListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildGetSqlReaderNullStr(column)));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t");
            
            #line 101 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_PagedListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildSetFieldValue(column)));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n");
            
            #line 104 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_PagedListEntities.tt"

}

            
            #line default
            #line hidden
            this.Write(@"                        	result.Add(info);
                    	}
                	}

                	totalCount = Convert.ToInt32(paraTotalCount.Value);
                	pageCount = (totalCount + pageSize - 1) / pageSize;
				}
				catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State != ConnectionState.Closed)
                        conn.Close();
					if (conn != null)
                        conn.Dispose();
                }
            }

            return result;
        }
		
		/// <summary>
        /// 获取分页数据,包括所有列
        /// </summary>
        /// <param name=""orderbys"">排序字段，0表示ASC，1表示DESC</param>
        /// <param name=""pageIndex"">第几页</param>
        /// <param name=""pageSize"">页大小</param>
        /// <param name=""pageCount"">分页数</param>
        /// <param name=""totalCount"">总记录数</param>
        /// <returns></returns>
		internal static List<");
            
            #line 139 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_PagedListEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity> PagedListEntities(List<KeyValuePair<string, int>> orderbys, int pageIndex" +
                    ", int pageSize, out int pageCount, out int totalCount)\r\n\t\t{\r\n\t\t\treturn PagedList" +
                    "Entities(\"\", null, orderbys, pageIndex, pageSize, out pageCount, out totalCount)" +
                    ";\r\n\t\t}\r\n\t\t\r\n\t\t");
            this.Write("\r\n\t\t");
            this.Write("/// <summary>\r\n        /// 保存记录，如果不存在insert，如果存在update\r\n        /// </summary>\r\n " +
                    "       /// <param name=\"entity\"></param>\r\n\t\tinternal static void SaveEntity(");
            
            #line 5 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_SaveEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity entity)\r\n\t\t{\r\n\t\t\tif(entity == null)\r\n\t\t\t\tthrow new Exception(\"Insert方法的参数为" +
                    "空。\");\r\n");
            
            #line 9 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_SaveEntity.tt"

foreach(var column in DBTable.Columns)
{
if (column.IsPrimaryKey && !column.Identity && !LanguageConvert.IsValueType(column.CSharpType))
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\r\n\t\t\tif(entity.");
            
            #line 15 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_SaveEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(" == null)\r\n\t\t\t\tthrow new Exception(\"主键不能为空值。\");\r\n");
            
            #line 17 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_SaveEntity.tt"

}
}

            
            #line default
            #line hidden
            this.Write("\t\t\r\n\t\t\tusing (SqlConnection conn = new SqlConnection(");
            
            #line 21 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_SaveEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Var.DBConnectionName));
            
            #line default
            #line hidden
            this.Write("Link.Connection))\r\n            {\r\n\t\t\t\tSqlCommand cmd = new SqlCommand();\r\n       " +
                    "         string sql = @\"");
            
            #line 24 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_SaveEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.GetSaveSql(DBTable)));
            
            #line default
            #line hidden
            this.Write("\";\r\n\t\t\t\tstring tmpStr = \"\";\r\n\t\t\t\tforeach(KeyValuePair<string, object> item in ent" +
                    "ity.ValueDict)\r\n\t\t\t\t{\r\n\t\t\t\t\t");
            
            #line 28 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_SaveEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildGetKeyEqContinue(DBTable)));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\ttmpStr += \"[\" + item.Key + \"] = @\" + item.Key + \",\";\r\n\t\t\t\t\tSqlParameter pa" +
                    "ra = ");
            
            #line 30 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_SaveEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write(@"Schema.GetSqlParameter(item.Key);
                	para.Value = item.Value;
                	cmd.Parameters.Add(para);
				}
				tmpStr = tmpStr.TrimEnd(',');
				
				sql = string.Format(sql, tmpStr);
                cmd.CommandText = sql;
                cmd.Connection = conn;
");
            
            #line 39 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_SaveEntity.tt"

foreach(var column in DBTable.Columns)
{
if (column.Computed)//column.Identity || 
	continue;

            
            #line default
            #line hidden
            this.Write("\t\t\t\tSqlParameter para_");
            
            #line 45 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_SaveEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 45 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_SaveEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Schema.");
            
            #line 45 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_SaveEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(".GetSqlParameter();\r\n                para_");
            
            #line 46 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_SaveEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(".Value = ");
            
            #line 46 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_SaveEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.SetParameterValueStr(column, "entity")));
            
            #line default
            #line hidden
            this.Write(";\r\n                cmd.Parameters.Add(para_");
            
            #line 47 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_SaveEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n");
            
            #line 49 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_SaveEntity.tt"

}

            
            #line default
            #line hidden
            this.Write(@"				try
                {
                    conn.Open();
                    cmd.ExecuteNonQuery();
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State != ConnectionState.Closed)
                        conn.Close();
					if (conn != null)
                        conn.Dispose();
                }
			}
		}		");
            this.Write("\r\n\t\t");
            this.Write(@"/// <summary>
        /// 根据条件返回前N条记录
        /// </summary>
		/// <param name=""topN"">返回几条记录</param>
		/// <param name=""strWhere"">where条件</param>
		/// <param name=""paras"">参数集合</param>
		/// <param name=""orderbys"">排序字段，0表示ASC，1表示DESC</param>
		internal static List<");
            
            #line 8 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopNEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity> TopNEntities(int topN, string strWhere, SqlParameter[] paras, List<KeyVal" +
                    "uePair<string, int>> orderbys)\r\n\t\t{\r\n\t\t\tList<");
            
            #line 10 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopNEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity> result = new List<");
            
            #line 10 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopNEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity>();\r\n\t\t\tstring sql = @\"");
            
            #line 11 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopNEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildSQL_TopNByWhere(DBTable)));
            
            #line default
            #line hidden
            this.Write(@""";
			
			string orderbyStr = """";
			if(orderbys != null)
			{
	            int i = 0;
	            foreach (KeyValuePair<string, int> item in orderbys)
	            {
	                if (i != 0)
	                {
	                    orderbyStr += "", "";
	                }
	                orderbyStr += item.Key + "" "";
	                if (item.Value == 0)
	                {
	                    orderbyStr += ""ASC"";
	                }
	                else
	                {
	                    orderbyStr += ""DESC"";
	                }
					i++;
	            }
			}
			
			string whereStr = (string.IsNullOrEmpty(strWhere)) ? """" : "" WHERE "" + strWhere;
			orderbyStr = (string.IsNullOrEmpty(orderbyStr)) ? """" : "" ORDERBY "" + strWhere;
			sql = sql + whereStr + orderbyStr;
			sql = string.Format(sql, topN);

            using (SqlConnection conn = new SqlConnection(");
            
            #line 41 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopNEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Var.DBConnectionName));
            
            #line default
            #line hidden
            this.Write(@"Link.Connection))
            {
				SqlCommand cmd = new SqlCommand(sql, conn);
				if(!string.IsNullOrEmpty(strWhere) && paras != null && paras.Length > 0)
                	cmd.Parameters.AddRange(paras);
				try
				{
                	conn.Open();
                	using (SqlDataReader sdr = cmd.ExecuteReader())
                	{
");
            
            #line 51 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopNEntities.tt"

foreach(var column in DBTable.Columns)
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\tint ");
            
            #line 55 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopNEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write("Ordinal = sdr.GetOrdinal(\"");
            
            #line 55 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopNEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.RawName));
            
            #line default
            #line hidden
            this.Write("\");\r\n");
            
            #line 56 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopNEntities.tt"

}

            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\twhile (sdr.Read())\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t");
            
            #line 62 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopNEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity info = new ");
            
            #line 62 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopNEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity();\r\n");
            
            #line 63 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopNEntities.tt"

foreach(var column in DBTable.Columns)
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\tif(sdr.IsDBNull(");
            
            #line 67 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopNEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write("Ordinal))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tinfo._set");
            
            #line 69 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopNEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 69 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopNEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildGetSqlReaderNullStr(column)));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t");
            
            #line 73 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopNEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildSetFieldValue(column)));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n");
            
            #line 76 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopNEntities.tt"

}

            
            #line default
            #line hidden
            this.Write(@"                  		result.Add(info);
						}
					}
				}
				catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State != ConnectionState.Closed)
                        conn.Close();
					if (conn != null)
                        conn.Dispose();
                }
            }

            return result;
		}
		
		/// <summary>
        /// 根据条件返回前N条记录
        /// </summary>
		/// <param name=""topN"">返回几条记录</param>
		/// <param name=""strWhere"">where条件</param>
		/// <param name=""paras"">参数集合</param>
		internal static List<");
            
            #line 104 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopNEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write(@"Entity> TopNEntities(int topN, string strWhere, SqlParameter[] paras)
		{
			return TopNEntities(topN, strWhere, paras, null);
		}
		
		/// <summary>
        /// 根据条件返回前N条记录
        /// </summary>
		/// <param name=""topN"">返回几条记录</param>
		/// <param name=""strWhere"">where条件</param>
		/// <param name=""paras"">参数集合</param>
		internal static List<");
            
            #line 115 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopNEntities.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity> TopNEntities(int topN, string strWhere)\r\n\t\t{\r\n\t\t\treturn TopNEntities(topN" +
                    ", strWhere, null, null);\r\n\t\t}");
            this.Write("\r\n\t\t");
            this.Write("/// <summary>\r\n        /// 根据条件返回第一条记录\r\n        /// </summary>\r\n\t\t/// <param name" +
                    "=\"strWhere\">where条件</param>\r\n\t\t/// <param name=\"paras\">参数集合</param>\r\n\t\t/// <para" +
                    "m name=\"orderbys\">排序字段，0表示ASC，1表示DESC</param>\r\n\t\tinternal static ");
            
            #line 7 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopOneEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity TopOneEntity(string strWhere, SqlParameter[] paras, List<KeyValuePair<stri" +
                    "ng, int>> orderbys)\r\n\t\t{\r\n\t\t\tstring sql = @\"");
            
            #line 9 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopOneEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildSQL_TopOneByWhere(DBTable)));
            
            #line default
            #line hidden
            this.Write(@""";
			
			string orderbyStr = """";
			if(orderbys != null)
			{
	            int i = 0;
	            foreach (KeyValuePair<string, int> item in orderbys)
	            {
	                if (i != 0)
	                {
	                    orderbyStr += "", "";
	                }
	                orderbyStr += item.Key + "" "";
	                if (item.Value == 0)
	                {
	                    orderbyStr += ""ASC"";
	                }
	                else
	                {
	                    orderbyStr += ""DESC"";
	                }
					i++;
	            }
			}
			
			string whereStr = (string.IsNullOrEmpty(strWhere)) ? """" : "" WHERE "" + strWhere;
			orderbyStr = (string.IsNullOrEmpty(orderbyStr)) ? """" : "" ORDERBY "" + strWhere;
			sql = sql + whereStr + orderbyStr;

            ");
            
            #line 38 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopOneEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity info = null;\r\n            using (SqlConnection conn = new SqlConnection(");
            
            #line 39 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopOneEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Var.DBConnectionName));
            
            #line default
            #line hidden
            this.Write(@"Link.Connection))
            {
				SqlCommand cmd = new SqlCommand(sql, conn);
				if(!string.IsNullOrEmpty(strWhere) && paras != null && paras.Length > 0)
                	cmd.Parameters.AddRange(paras);
				try
				{
                	conn.Open();
                	using (SqlDataReader sdr = cmd.ExecuteReader())
                	{
");
            
            #line 49 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopOneEntity.tt"

foreach(var column in DBTable.Columns)
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\tint ");
            
            #line 53 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopOneEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write("Ordinal = sdr.GetOrdinal(\"");
            
            #line 53 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopOneEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.RawName));
            
            #line default
            #line hidden
            this.Write("\");\r\n");
            
            #line 54 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopOneEntity.tt"

}

            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\tif (sdr.Read())\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tinfo = new ");
            
            #line 60 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopOneEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity();\r\n");
            
            #line 61 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopOneEntity.tt"

foreach(var column in DBTable.Columns)
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\tif(sdr.IsDBNull(");
            
            #line 65 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopOneEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.CamelName));
            
            #line default
            #line hidden
            this.Write("Ordinal))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tinfo._set");
            
            #line 67 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopOneEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 67 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopOneEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildGetSqlReaderNullStr(column)));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t");
            
            #line 71 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopOneEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildSetFieldValue(column)));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n");
            
            #line 74 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopOneEntity.tt"

}

            
            #line default
            #line hidden
            this.Write(@"                  
						}
					}
				}
				catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State != ConnectionState.Closed)
                        conn.Close();
					if (conn != null)
                        conn.Dispose();
                }
            }

            return info;
		}
		
		/// <summary>
        /// 根据条件返回第一条记录
        /// </summary>
		/// <param name=""strWhere"">where条件</param>
		/// <param name=""paras"">参数集合</param>
		internal static ");
            
            #line 101 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopOneEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write(@"Entity TopOneEntity(string strWhere, SqlParameter[] paras)
		{
			return TopOneEntity(strWhere, paras, null);
		}
		
		/// <summary>
        /// 根据条件返回第一条记录
        /// </summary>
		/// <param name=""strWhere"">where条件</param>
		/// <param name=""paras"">参数集合</param>
		internal static ");
            
            #line 111 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_TopOneEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity TopOneEntity(string strWhere)\r\n\t\t{\r\n\t\t\treturn TopOneEntity(strWhere, null," +
                    " null);\r\n\t\t}");
            this.Write("\r\n\t\t");
            this.Write("/// <summary>\r\n        /// 根据主键更记录\r\n        /// </summary>\r\n        /// <param na" +
                    "me=\"info\"></param>\r\n\t\tinternal static void UpdateEntity(");
            
            #line 5 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_UpdateEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Entity entity)\r\n        {\r\n\t\t\tif(entity == null)\r\n\t\t\t\tthrow new Exception(\"Update" +
                    "方法的参数为空。\");\r\n");
            
            #line 9 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_UpdateEntity.tt"

foreach(var column in DBTable.Columns)
{
if (column.IsPrimaryKey && !LanguageConvert.IsValueType(column.CSharpType))
{

            
            #line default
            #line hidden
            this.Write("\t\t\t\r\n\t\t\tif(entity.");
            
            #line 15 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_UpdateEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(" == null)\r\n\t\t\t\tthrow new Exception(\"主键不能为空值。\");\r\n");
            
            #line 17 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_UpdateEntity.tt"

}	
}

            
            #line default
            #line hidden
            this.Write("\t\t\r\n            using (SqlConnection conn = new SqlConnection(");
            
            #line 21 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_UpdateEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Var.DBConnectionName));
            
            #line default
            #line hidden
            this.Write("Link.Connection))\r\n            {\r\n\t\t\t\tSqlCommand cmd = new SqlCommand();\r\n       " +
                    "         string sql = @\"");
            
            #line 24 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_UpdateEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.GetUpdateByPKSql_2(DBTable)));
            
            #line default
            #line hidden
            this.Write("\";\r\n\t\t\t\tstring tmpStr = \"\";\r\n\t\t\t\tforeach(KeyValuePair<string, object> item in ent" +
                    "ity.ValueDict)\r\n\t\t\t\t{\r\n\t\t\t\t\t");
            
            #line 28 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_UpdateEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.BuildGetKeyEqContinue(DBTable)));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\ttmpStr += \"[\" + item.Key + \"] = @\" + StringHelper.SetValidName(item.Key) +" +
                    " \",\";\r\n\t\t\t\t\tSqlParameter para = ");
            
            #line 30 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_UpdateEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write(@"Schema.GetSqlParameter(item.Key);
                	para.Value = item.Value;
                	cmd.Parameters.Add(para);
				}
				tmpStr = tmpStr.TrimEnd(',');
				
				sql = string.Format(sql, tmpStr);
                cmd.CommandText = sql;
                cmd.Connection = conn;
");
            
            #line 39 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_UpdateEntity.tt"

foreach(var column in DBTable.Columns)
{
if (column.Computed)//column.Identity || 
	continue;

            
            #line default
            #line hidden
            this.Write("\t\t\t\r\n\t\t\t\tSqlParameter para");
            
            #line 45 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_UpdateEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 45 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_UpdateEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DBTable.Name));
            
            #line default
            #line hidden
            this.Write("Schema.");
            
            #line 45 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_UpdateEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(".GetSqlParameter();\r\n            \tpara");
            
            #line 46 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_UpdateEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(".Value = entity.");
            
            #line 46 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_UpdateEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(";\r\n            \tcmd.Parameters.Add(para");
            
            #line 47 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_UpdateEntity.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.PascalName));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 48 "D:\zhhcode\CKGen\CKGen\CKGen.Temp.DataAccess\CodeTempletes\DTO_Entity\DTO_UpdateEntity.tt"

}

            
            #line default
            #line hidden
            this.Write(@"				try
                {
                    conn.Open();
                    cmd.ExecuteNonQuery();
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State != ConnectionState.Closed)
                        conn.Close();
					if (conn != null)
                        conn.Dispose();
                }
            }
        }");
            this.Write("\r\n\t}\r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public class TableDTOTempleteBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
