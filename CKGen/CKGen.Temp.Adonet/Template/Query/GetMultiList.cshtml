@using RazorEngine.Templating
@using CKGen.DBSchema;
@using CKGen;
@using CKGen.Temp.Adonet;
@inherits TemplateBase<DbQueryForMultiListModel>

public void GetList()
{
    string sql = @@"@(Model.SQL)";
    @for (int i = 0; i < Model.Modules.Count; i++)
    {
        var module = Model.Modules[i];
<text>    List<@(module.CodeName)> result@(i) = new List<@(module.CodeName)>();</text>
    }

    using (SqlConnection conn = new SqlConnection('conn_name'))
    {
        try
        {
            SqlCommand cmd = new SqlCommand(sql, conn);
            conn.Open();
            using (SqlDataReader sdr = cmd.ExecuteReader())
            {
                @for(int i=0; i<Model.Modules.Count; i++)
                {
                    var module = Model.Modules[i];
<text>                while (sdr.Read())
                {
                    @(module.CodeName) entity = new @(module.CodeName)();
                    @foreach (var field in module.Fields)
                    {
            <text>        @(Util.GetPropertySettingString2("entity", "sdr", field))</text>
                    }
                    list.Add(entity);
                }
                sdr.NextResult();
</text>
                }
            }
        }
        finally
        {
            if (conn.State != ConnectionState.Closed)
                conn.Close();
            if (conn != null)
                conn.Dispose();
        }
    }

    return list;
}
