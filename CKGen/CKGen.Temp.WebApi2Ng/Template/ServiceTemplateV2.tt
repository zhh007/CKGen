<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs/Rx';

<# if(!string.IsNullOrEmpty(ImportModels)) {#>
import {
  <#= ImportModels #> } from './<#= Api.Name.ToLower() #>.model';
<# } #>
import { environment } from 'environments/environment';

@Injectable()
export class <#= Api.Name #>Service {
  private _baseURL: string = environment.SysManageApiUrlPrefix + '<#= BaseUrl #>';

  constructor(private _http: HttpClient) {
  }

  _api(api) {
    return this._baseURL + api;
  }

<#
foreach (var mt in this.Api.Methods)
{
	string paramStr = "";
	string contentStr = null;
    bool oneArg = false;
    bool isSampleType = false;
	if(mt.Params != null)
	{
		if(mt.Params.Count == 1)
		{
            oneArg = true;
			if(mt.Params[0].IsSampleType)
			{
                isSampleType = true;
				paramStr += mt.Params[0].Name + ": " + mt.Params[0].EntityName;
				contentStr = "{ '" + mt.Params[0].Name + "': " + mt.Params[0].Name + " }";
			}
            else
            {
                if(IsWorkflowApi && wfMethods.Contains(mt.Name)) {
                    paramStr += mt.Params[0].Name + ": any";
                }
                else
                {
                    paramStr += mt.Params[0].Name + ": " + mt.Params[0].EntityName;
                }
                contentStr = mt.Params[0].Name;
            }
		}
		else
		{
			contentStr += "{ ";
			for(int i = 0; i < mt.Params.Count; i++)
			{
				paramStr += mt.Params[i].Name + ": " + mt.Params[i].EntityName;
				contentStr = "'" + mt.Params[i].Name + "': " + mt.Params[i].Name;
				if(i < mt.Params.Count - 1)
				{
					paramStr +=", ";
					contentStr +=", ";
				}
			}
			contentStr += " }";
		}
	}
	
#>
  <#= mt.Name #>(<#= paramStr #>): Observable<<#= mt.ResponseEntity #>> {
<# if(paramStr == "") {#>
    return this._http.post<<#= mt.ResponseEntity #>>(this._api('/<#= mt.Name #>'), null);
<# } else { 
     if(oneArg) {
        if(isSampleType) {#>
    const content = <#= contentStr #>;
    return this._http.post<<#= mt.ResponseEntity #>>(this._api('/<#= mt.Name #>'), content);
<#} else {#>
    return this._http.post<<#= mt.ResponseEntity #>>(this._api('/<#= mt.Name #>'), <#=contentStr#>);
<#}
     } else {#>
    const content = JSON.stringify(<#= contentStr #>);
    return this._http.post<<#= mt.ResponseEntity #>>(this._api('/<#= mt.Name #>'), content);
<#}
}
#>  }

<#
} // end foreach
#>
}
